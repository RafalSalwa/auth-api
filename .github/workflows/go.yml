# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  golangci-lint:
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2

  yamllint:
    name: runner / yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: reviewdog/action-yamllint@v1
        with:
          fail_on_error: true
          reporter: github-pr-review
          yamllint_flags: '-d "{extends: default, rules: {truthy: disable}}" .'

  check-dependencies:
    name: runner / check-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
      - name: WriteGoList
        run: go list -json -m all > go.list
      - name: Nancy
        uses: sonatype-nexus-community/nancy-github-action@main
        continue-on-error: true

  test:
    name: runner / integration_tests
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20

    - name: Checkout code
      uses: actions/checkout@v3

    - name: go mod package cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-golangci-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-gogolangci-

    - name: Build
      run: go build -o server ./cmd/server/main.go

    - name: Test
      run: make integration_tests
