version: '3.9'
services:
  app:
    container_name: app
    build: .
    env_file: .env
    ports:
      - "4000:4000"
      - "6060:6060"
      - "8088:8088"
      - "8089:8089"

    volumes:
      - ./:/interview
    depends_on:
      mysql:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      interview-net:
        aliases:
          - iapi

  mysql:
    container_name: mysql
    image: mysql
    volumes:
      - ./build/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_DATABASE: "interview"
      MYSQL_USER: "interview"
      MYSQL_PASSWORD: "interview"
      MYSQL_ROOT_PASSWORD: "interview"
    ports:
      - "6033:3306"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55
    networks:
      interview-net:
        aliases:
          - imysql

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: interview
      MONGO_INITDB_ROOT_PASSWORD: interview
    networks:
      interview-net:
        aliases:
          - imongo

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: interview
      ME_CONFIG_MONGODB_ADMINPASSWORD: interview
      ME_CONFIG_MONGODB_URL: mongodb://interview:interview@mongo:27017/
    networks:
      interview-net:
        aliases:
          - imongoexpress

  cache:
    container_name: cache
    image: redis:6.2-alpine
    restart: always
    ports:
      - '16379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass interview
    volumes:
      - cache:/data
    networks:
      interview-net:
        aliases:
          - icache

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      interview-net:
        aliases:
          - imailhog

  postgres:
    container_name: postgres
    image: postgres
    user: postgres
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'interview'
      POSTGRES_PASSWORD: 'interview'
      POSTGRES_DB: 'interview'
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -U interview -d interview" ]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55
    networks:
      interview-net:
        aliases:
          - ipostgres

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=interview
      - RABBITMQ_DEFAULT_PASS=interview
      - RABBITMQ_DEFAULT_VHOST=interview
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      interview-net:
        aliases:
          - irabbitmq

volumes:
  cache:
    driver: local
  pg-data:

networks:
  interview-net:
    name: interview-net
    driver: bridge
    enable_ipv6: false
